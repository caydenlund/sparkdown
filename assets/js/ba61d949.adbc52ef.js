"use strict";(self.webpackChunksparkdown_docs=self.webpackChunksparkdown_docs||[]).push([[41],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=i.createContext({}),p=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=p(e.components);return i.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(n),f=r,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||o;return n?i.createElement(m,a(a({ref:t},s),{},{components:n})):i.createElement(m,a({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var p=2;p<o;p++)a[p]=n[p];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3298:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return s},default:function(){return d}});var i=n(7462),r=n(3366),o=(n(7294),n(3905)),a=["components"],l={title:"Command Line Interface"},c=void 0,p={unversionedId:"cli",id:"cli",isDocsHomePage:!1,title:"Command Line Interface",description:"The command line interface is designed to be as straightforward as possible.",source:"@site/docs/cli.mdx",sourceDirName:".",slug:"/cli",permalink:"/sparkdown/docs/cli",editUrl:"https://github.com/shrimpster00/sparkdown/edit/documentation/docs/cli.mdx",tags:[],version:"current",frontMatter:{title:"Command Line Interface"},sidebar:"docs",previous:{title:"Installation",permalink:"/sparkdown/docs/installation"},next:{title:"State",permalink:"/sparkdown/docs/api/state"}},s=[{value:"Options:",id:"options",children:[],level:2}],u={toc:s};function d(e){var t=e.components,n=(0,r.Z)(e,a);return(0,o.kt)("wrapper",(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The command line interface is designed to be as straightforward as possible."),(0,o.kt)("p",null,"The first argument is the input file, and the second is the output file.\nEither can be substituted with the special value ",(0,o.kt)("inlineCode",{parentName:"p"},"-")," to indicate stdin/stdout,\nor omitted entirely for the same effect."),(0,o.kt)("h2",{id:"options"},"Options:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-h, --help"),": Show the help message and exit."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-v, --version"),": Show the version information and exit."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-o, --output [file]")," (deprecated): The output file.\nThis option is for compatibility with the old command line interface,\nand will be removed in a future release."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-w, --watch"),": Watch the input file and re-render on file change.\nThis option makes use of the ",(0,o.kt)("img",{parentName:"li",src:"https://github.com/shrimpster00/woof",alt:"woof"}),"\nlibrary, which is bundled with Sparkdown."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-c, --config [file]"),": Load a configuration file. Defaults to\n",(0,o.kt)("inlineCode",{parentName:"li"},"~/.config/sparkdown/config.yaml"),", if it exists."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-i, --confirm"),": Prompt the user for confirmation\nbefore overwriting the output file."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-s, --silent"),": Don't print anything to stdout."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-l, --log [file]"),": The log file. Defaults to ",(0,o.kt)("inlineCode",{parentName:"li"},"[filename].sparkdown.log"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"--log-level [level]"),": Set the log level.\nValid levels are ",(0,o.kt)("inlineCode",{parentName:"li"},"debug"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"info"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"error"),", and ",(0,o.kt)("inlineCode",{parentName:"li"},"silent"),".\nDefaults to ",(0,o.kt)("inlineCode",{parentName:"li"},"info"),".")))}d.isMDXComponent=!0}}]);